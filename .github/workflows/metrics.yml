name: Metrics
on:
  schedule: [{cron: "0 16 * * *"}]  # Se ejecuta todos los d√≠as a las 16:00 UTC
  workflow_dispatch:
  push: {branches: ["master", "main"]}

jobs:
  refresh-spotify-token:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üîÑ Refresh Spotify Token
        run: |
          bash refresh_spotify_token.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}

  github-metrics:
    runs-on: ubuntu-latest
    needs: refresh-spotify-token  # Espera a que el script termine antes de ejecutar las m√©tricas
    permissions:
      contents: write
    steps:
      - name: üìä Generate GitHub Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          filename: github-metrics.svg
          base: header, activity, community
          template: classic
          config_timezone: Europe/Madrid

      - name: üèÜ Generate Achievements
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          filename: achievements.svg
          base: ""
          template: classic
          config_timezone: Europe/Madrid
          plugin_achievements: yes
          plugin_achievements_display: compact
          plugin_fortune: yes

      - name: üéµ Generate Spotify Music Stats
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          filename: spotify.svg
          base: ""
          template: classic
          config_timezone: Europe/Madrid
          plugin_music: yes
          plugin_music_provider: spotify
          plugin_music_mode: recent
          plugin_music_limit: 3
          plugin_music_token: "${{ secrets.SPOTIFY_CLIENT_ID }};${{ secrets.SPOTIFY_CLIENT_SECRET }};${{ secrets.SPOTIFY_REFRESH_TOKEN }}"